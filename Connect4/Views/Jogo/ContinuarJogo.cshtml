@model Jogo

@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Continuar jogo";
}

<h2>Continuar</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                <span>ID jogo: </span>
            </th>
            <th>
                <span>Jogador 1: </span>
            </th>
            <th>
                <span>Jogador 2: </span>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                @Html.DisplayFor(modelItem => modelItem.Id)
            </td>
            <td>
                @if (SignInManager.IsSignedIn(User))
                {
                    @Html.DisplayFor(modelItem => modelItem.Jogador1.Nome)
                }
            </td>
            <td>
                @if (SignInManager.IsSignedIn(User))
                {
                    @Html.DisplayFor(modelItem => modelItem.Jogador2.Nome)
                }

            </td>
            <td>

                @if (SignInManager.IsSignedIn(User))
                {
                    <a asp-action="Jogar" asp-route-id="@Model.Id">Jogar</a>
                }
            </td>
        </tr>

    </tbody>
</table>


<span style="font-weight: bold;">Jogador 1:</span>
@if (Model.Jogador1 == null)
{
    <span>ESPERANDO O ADVERSÁRIO</span>
}
else
{
    <span>@Model.Jogador1.Nome</span>
}

<br />

<span style="font-weight: bold;">Jogador 2:</span>
@if (Model.Jogador2 == null)
{
    <span>ESPERANDO O ADVERSÁRIO</span>
}
else
{
    <span>@Model.Jogador2.Nome</span>
}

<br />
<br />

@if (Model.Jogador1Id != null && Model.Jogador2Id != null)
{
    //É utilizado jogador1Id para evitar problemas caso o controller
    //não tenha incluído (include) explicitamente a propriedade Jogador
    <a asp-area="" asp-controller="Jogo"
       asp-action="Tabuleiro"
       asp-route-id="@Model.Id">Iniciar Jogo</a>
}
